name: Build and publish
on:
  push:
    tags: 
      - 'v*.*.*'


jobs:
  build-windows:
    permissions:
      contents: write
    name: Build EXE
    runs-on: windows-latest
    steps:
      - name: Create Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: "3.11"
          spec: "G-Serv.spec"
          requirements: "requirements.txt"
          upload_exe_with_name: "G-Serv_Windows"
      - name: Create Launcher
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: "3.11"
          spec: "Launcher.spec"
          requirements: "requirements_launcher.txt"
          upload_exe_with_name: "Launcher_Windows"
  

  build-docker:
    env:
      # Use docker.io for Docker Hub if empty
      REGISTRY: ghcr.io
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}
    name: Build Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64,linux/amd64
  release:
    needs:
      - build-windows
      - build-docker
    name: Release via GHA
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: G-Serv_Windows
      - uses: actions/download-artifact@v4
        with:
          name: Launcher_Windows
      - run: ls -lah .
      - run: echo "${{github.ref_name}}" > version.txt
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "G-Serv.exe,version.txt,Launcher.exe"
          prerelease: true
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitPrereleaseDuringUpdate: true